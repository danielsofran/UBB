     1                                  bits 32
     2                                  global start
     3                                  extern printf, exit
     4                                  import printf msvcrt.dll
     5                                  import exit msvcrt.dll
     6                                  
     7                                  segment data use32 class=data
     8 00000000 656E6A656E656A6961-         s1 db "enjenejiaria", 0
     8 00000009 72696100           
     9 0000000D 6172696100                  s2 db "aria", 0
    10                                      
    11                                  segment code use32 class=code
    12                                  start:
    13 00000000 68[00000000]                push s1
    14 00000005 68[0D000000]                push s2
    15 0000000A E815000000                  call sufix
    16 0000000F 83C408                      add esp, 4*2
    17                                      
    18 00000012 50                          push eax
    19 00000013 FF15[00000000]              call [printf]
    20 00000019 83C404                      add esp, 4
    21                                      
    22 0000001C 6A00                        push 0
    23 0000001E FF15[00000000]              call [exit]
    24                                  
    25                                  sufix:
    26                                      ; [esp+4] - al doilea sir
    27                                      ; [esp+8] - primul sir
    28                                      ; eax - sirul rezultat
    29 00000024 8B742404                    mov esi, [esp+4]
    30                                      c1: 
    31 00000028 AC                              lodsb
    32 00000029 3C00                            cmp al, 0
    33 0000002B 7402                            je nc1
    34 0000002D EBF9                            jmp c1
    35                                      nc1:
    36 0000002F 83EE01                      sub esi, 1
    37 00000032 89F7                        mov edi, esi    ; edi - sf celui de al doilea sir
    38 00000034 8B742408                    mov esi, [esp+8]
    39                                      c2: 
    40 00000038 AC                              lodsb
    41 00000039 3C00                            cmp al, 0
    42 0000003B 7402                            je nc2
    43 0000003D EBF9                            jmp c2
    44                                      nc2:
    45 0000003F 83EE01                      sub esi, 1         ; esi - sfarsitul primului sir
    46 00000042 FD                          std
    47                                      bucla:
    48 00000043 A6                              cmpsb
    49 00000044 750E                            jne incs
    50 00000046 3B742408                        cmp esi, [esp+8]
    51 0000004A 720A                            jb final
    52 0000004C 3B7C2404                        cmp edi, [esp+4]
    53 00000050 7204                            jb final
    54 00000052 EBEF                            jmp bucla
    55                                      incs:
    56 00000054 46                              inc esi
    57 00000055 47                              inc edi
    58                                      final:
    59 00000056 FC                              cld
    60 00000057 83C601                          add esi, 1
    61 0000005A 89F0                            mov eax, esi
    62 0000005C C3                              ret
    63                                          
