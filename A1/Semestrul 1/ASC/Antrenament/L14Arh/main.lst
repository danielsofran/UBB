     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, printf, scanf, fopen, fclose, fprintf, fscanf
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                  import fscanf msvcrt.dll
    13                                  
    14                                  
    15                                  segment data use32 class=data
    16 00000000 257300                      formats db "%s", 0
    17 00000003 257800                      formatd db "%x", 0
    18 00000006 7700                        mod db "w", 0
    19 00000008 00000000                    n dd 0
    20 0000000C <res 00000015>              cv resb 21
    21 00000021 616E6100                    sir db "ana", 0
    22                                  
    23                                  segment code use32 class=code
    24                                      isok:
    25 00000000 B900000000                      mov ecx, 0
    26 00000005 8B742404                        mov esi, [esp+4]
    27 00000009 AC                              lodsb
    28 0000000A 88C2                            mov dl, al
    29                                          .bucla:
    30 0000000C 3C00                                cmp al, 0
    31 0000000E 740A                                je .next
    32                                              
    33 00000010 3C23                                cmp al, '#'
    34 00000012 7406                                je .next
    35                                              
    36 00000014 88C6                                mov dh, al
    37 00000016 41                                  inc ecx
    38 00000017 AC                                  lodsb
    39 00000018 EBF2                                jmp .bucla
    40                                          .next:
    41 0000001A 38F2                                cmp dl, dh
    42 0000001C 750E                                jne .zero
    43                                              
    44 0000001E 3B0D[08000000]                      cmp ecx, [n]
    45 00000024 7C06                                jl .zero
    46                                              
    47 00000026 B801000000                          mov eax, 1
    48 0000002B C3                                  ret
    49                                              
    50                                              .zero:
    51 0000002C B800000000                          mov eax, 0
    52 00000031 C3                                  ret
    53                                          
    54                                      start:
    55                                          ; push sir
    56                                          ; call isok
    57                                          ; add esp, 4
    58                                          
    59                                          ; mov eax, 0
    60                                          ; mov al, -512<<2
    61                                          
    62 00000032 660FBEC0                        movsx ax, al
    63                                          
    64 00000036 6801000200                      push 00020001h
    65 0000003B B800000000                      mov eax, 0
    66 00000040 6658                            pop ax
    67                                          
    68 00000042 50                              push eax
    69 00000043 68[03000000]                    push formatd
    70 00000048 FF15[00000000]                  call [printf]
    71 0000004E 83C408                          add esp, 4*2
    72 00000051 6A00                            push    dword 0     
    73 00000053 FF15[00000000]                  call    [exit]      
