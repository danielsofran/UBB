     1                                  bits 32
     2                                  global start         
     3                                  
     4                                  extern exit, printf, scanf, fopen, fclose, fprintf, fread, rename, remove
     5                                  import exit msvcrt.dll
     6                                  import printf msvcrt.dll 
     7                                  import scanf msvcrt.dll 
     8                                  import fopen msvcrt.dll 
     9                                  import fclose msvcrt.dll 
    10                                  import fprintf msvcrt.dll 
    11                                  import fread msvcrt.dll 
    12                                  import rename msvcrt.dll 
    13                                  import remove msvcrt.dll 
    14                                  
    15                                  segment data use32 class=data
    16 00000000 00000000                    n32 dd 0
    17 00000004 0000                        n dw 0
    18 00000006 00                          octet db 0
    19                                      
    20 00000007 496E74726F64756365-         msg_in db "Introduceti numarul in baza 16: ", 0
    20 00000010 7469206E756D617275-
    20 00000019 6C20696E2062617A61-
    20 00000022 2031363A2000       
    21 00000028 255800                      format_b16 db "%X", 0
    22 0000002B 256300                      format_c db "%c", 0
    23 0000002E 00000000                    descriptor dd 0
    24 00000032 7200                        mod_citire db "r", 0
    25 00000034 696E2E74787400              path db "in.txt", 0
    26                                      
    27                                  
    28                                  segment code use32 class=code
    29                                  start:
    30                                      ; afisare mesaj citire
    31 00000000 68[07000000]                push msg_in
    32 00000005 FF15[00000000]              call [printf]
    33 0000000B 83C404                      add esp, 4
    34                                      
    35                                      ; citire n
    36 0000000E 68[00000000]                push n32
    37 00000013 68[28000000]                push format_b16
    38 00000018 FF15[00000000]              call [scanf]
    39 0000001E 83C408                      add esp, 4*2
    40 00000021 8B1D[00000000]              mov ebx, [n32]
    41 00000027 66891D[04000000]            mov [n], bx
    42                                      
    43                                      ; deschidere fisier
    44 0000002E 68[32000000]                push mod_citire
    45 00000033 68[34000000]                push path
    46 00000038 FF15[00000000]              call [fopen]
    47 0000003E 83C408                      add esp, 4*2
    48                                      
    49                                      ; verificare deschidere cu succes
    50 00000041 83F800                      cmp eax, 0
    51 00000044 7458                        je inchide
    52 00000046 A3[2E000000]                mov [descriptor], eax
    53                                      
    54                                      ; parcurgem bitii lui n de la dreapta la stanga si citim simultan cate un octeti
    55 0000004B B910000000                  mov ecx, 16
    56                                      bucla:
    57 00000050 51                              push ecx
    58                                          ; citim octetul/caracterul
    59 00000051 FF35[2E000000]                  push dword[descriptor]
    60 00000057 6A01                            push 1 ; count
    61 00000059 6A01                            push 1 ; size
    62 0000005B 68[06000000]                    push octet ; rezultat
    63 00000060 FF15[00000000]                  call [fread]
    64 00000066 83C410                          add esp, 4*4
    65                                          
    66                                          ; verificam daca bitul ne indica sau nu sa afisam octetul
    67 00000069 66D10D[04000000]                ror word[n], 1
    68 00000070 731A                            jnc continue ; daca bitul nu e 1, nu il afisam
    69                                          
    70                                          ; altfel, afisam octetul
    71 00000072 BB00000000                      mov ebx, 0
    72 00000077 8A1D[06000000]                  mov bl, [octet]
    73                                          
    74 0000007D 53                              push ebx
    75 0000007E 68[2B000000]                    push format_c
    76 00000083 FF15[00000000]                  call [printf]
    77 00000089 83C408                          add esp, 4*2
    78                                          
    79                                          continue:
    80 0000008C 59                              pop ecx
    81 0000008D E2C1                        loop bucla
    82                                      
    83                                      ; inchidem fisierul
    84 0000008F FF35[2E000000]              push dword[descriptor]
    85 00000095 FF15[00000000]              call [fclose]
    86 0000009B 83C404                      add esp, 4
    87                                      
    88                                      inchide:
    89 0000009E 6A00                        push 0
    90 000000A0 FF15[00000000]              call [exit]
    91                                      
    92                                      
