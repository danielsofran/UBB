     1                                  ; Se dau cuvantul A si octetul B. Sa se obtina dublucuvatul C:
     2                                  ; bitii 0-3 ai lui C au valoarea 1
     3                                  ; bitii 4-7 ai lui C coincid cu bitii 0-3 ai lui A
     4                                  ; bitii 8-13 ai lui C au valoarea 0
     5                                  ; bitii 14-23 ai lui C coincid cu bitii 4-13 ai lui A
     6                                  ; bitii 24-29 ai lui C coincid cu bitii 2-7 ai lui B
     7                                  ; bitii 30-31 au valoarea 1
     8                                  
     9                                  bits 32
    10                                  global start
    11                                  extern exit
    12                                  import exit msvcrt.dll
    13                                  
    14                                  segment data use32 class=data
    15 00000000 1AE0                        a dw 1110000000011010b 
    16 00000002 33                          b db 00110011b
    17 00000003 00000000                    c dd 0 ; 11 001100 1000000001 000000 1010 1111 = CC8040AF
    18                                      
    19                                  segment code use32 class=code
    20                                  start:
    21 00000000 800D[03000000]0F            or byte [c], 0Fh ; bitii 0-3 ai lui C au valoarea 1
    22                                      
    23 00000007 8A1D[00000000]              mov bl, [a]
    24 0000000D C0E304                      shl bl, 4      ; bl - bitii 0-3 din A + 0000b
    25 00000010 081D[03000000]              or byte[c], bl ; bitii 4-7 ai lui C coincid cu bitii 0-3 ai lui A
    26                                      
    27 00000016 BB00000000                  mov ebx, 0
    28 0000001B 668B1D[00000000]            mov bx, [a]
    29 00000022 81E3F03F0000                and ebx, 0011111111110000b ; iau bitii 4-13 ai lui A
    30 00000028 C1E30A                      shl ebx, 10                ; bitii ajung pe pozitia 14 in ebx
    31 0000002B 091D[03000000]              or dword[c], ebx           ; bitii 14-23 ai lui C coincid cu bitii 4-13 ai lui A
    32                                      
    33 00000031 BB00000000                  mov ebx, 0
    34 00000036 8A1D[02000000]              mov bl, [b]
    35 0000003C C0EB02                      shr bl, 2   ; bitii 2-7 din B ajung pe poz 0 in masca
    36 0000003F C1E318                      shl ebx, 24 ; bitii 2-7 din B ajung pe poz 24 in masca
    37 00000042 091D[03000000]              or dword[c], ebx ; bitii 24-29 ai lui C coincid cu bitii 2-7 ai lui B
    38                                      
    39 00000048 BB03000000                  mov ebx, 11b     ; 2 biti de 1
    40 0000004D C1E31E                      shl ebx, 30      ; ajung pe poz 30-31 in masca
    41 00000050 091D[03000000]              or dword[c], ebx ; ajung in rezultat: bitii 30-31 au valoarea 1
    42                                      
    43 00000056 A1[03000000]                mov eax, [c]
    44 0000005B 6A00                        push dword 0
    45 0000005D FF15[00000000]              call [exit]
