     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, fopen, fprintf, fclose, printf, scanf
     5                                  import exit msvcrt.dll
     6                                  import fopen msvcrt.dll
     7                                  import fclose msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import fprintf msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 6669736965722E7478-         filename db "fisier.txt", 0
    13 00000009 7400               
    14 0000000B 00000000                    descriptor dd 0
    15 0000000F 7700                        write db "w", 0
    16 00000011 <res 00000100>              sir resb 256 ; cat ii cuvantul?
    17 00000111 257300                      format_sir db "%s", 0
    18 00000114 25730A00                    format_afisare_sir db "%s", 10, 0
    19 00000118 496E74726F64756365-         mesaj_init db "Introduceti cuvinte, terminand cu '$':", 10, 0
    19 00000121 746920637576696E74-
    19 0000012A 652C207465726D696E-
    19 00000133 616E64206375202724-
    19 0000013C 273A0A00           
    20                                  
    21                                  ; citim cv pana la introducerea '$' si afisam cv care contin o litera mare
    22                                  segment code use32 class=code
    23                                  start:
    24                                      ; cream fisierul
    25 00000000 68[0F000000]                push write
    26 00000005 68[00000000]                push filename
    27 0000000A FF15[00000000]              call [fopen]
    28 00000010 A3[0B000000]                mov [descriptor], eax
    29 00000015 83C408                      add esp, 4*2
    30                                      
    31                                      ; citim cuvinte de la tastatura
    32 00000018 68[18010000]                push mesaj_init
    33 0000001D FF15[00000000]              call [printf]
    34 00000023 83C404                      add esp, 4
    35                                      
    36                                      ciclu:
    37                                          ; citim sirul
    38 00000026 68[11000000]                    push sir
    39 0000002B 68[11010000]                    push format_sir
    40 00000030 FF15[00000000]                  call [scanf]
    41 00000036 83C408                          add esp, 4*2
    42                                          
    43                                          procesare: ; procesam sirul
    44                                              ; cautam caractere uppercase
    45 00000039 BE[11000000]                        mov esi, sir
    46                                              caractere:
    47 0000003E AC                                      lodsb ; al = caracter
    48 0000003F 3C00                                    cmp al, 0 ; verificam daca sirul s-a terminat
    49 00000041 7423                                    je continue
    50 00000043 3C41                                    cmp al, 'A' ; verificam daca este mai mare sau egal cu 'A'
    51 00000045 7CF7                                    jl caractere
    52 00000047 3C5A                                    cmp al, 'Z' ; verificam daca este mai mic sau egal cu 'Z'
    53 00000049 7FF3                                    jg caractere
    54 0000004B EB00                                    jmp scriere
    55                                              
    56                                          scriere: ; scriem in fisier cuvantul citit
    57 0000004D 68[11000000]                        push sir
    58 00000052 68[14010000]                        push format_afisare_sir
    59 00000057 FF35[0B000000]                      push dword[descriptor]
    60 0000005D FF15[00000000]                      call [fprintf]
    61 00000063 83C40C                              add esp, 4*3
    62                                          
    63                                          continue:
    64                                              ; verificam daca sirul introdus este "$" (nu numai sa-l contina)
    65 00000066 803D[12000000]00                    cmp byte[sir+1], 0 ; verifica daca are un singur caracter
    66 0000006D 75B7                                jne ciclu
    67 0000006F 803D[11000000]24                    cmp byte[sir], '$' ; verifica daca primul caracter este '$'
    68 00000076 75AE                                jne ciclu
    69                                      
    70                                      ; inchidem fisierul
    71 00000078 FF35[0B000000]              push dword[descriptor]
    72 0000007E FF15[00000000]              call [fclose]
    73 00000084 83C404                      add esp, 4
    74                                      
    75 00000087 6A00                        push dword 0
    76 00000089 FF15[00000000]              call [exit]
