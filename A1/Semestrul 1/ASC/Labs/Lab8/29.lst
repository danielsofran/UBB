     1                                  bits 32
     2                                  global start
     3                                  extern printf, fread, fscanf, fopen, fclose, exit
     4                                  import fscanf msvcrt.dll
     5                                  import printf msvcrt.dll
     6                                  import fopen msvcrt.dll
     7                                  import fclose msvcrt.dll
     8                                  import exit msvcrt.dll
     9                                  import fread msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 6E756D6572652E7478-         fisier db "numere.txt", 0
    12 00000009 7400               
    13 0000000B 4D6178696D756C206E-         mesaj_afisare db "Maximul numerelor din fisierul %s este %d.", 0
    13 00000014 756D6572656C6F7220-
    13 0000001D 64696E206669736965-
    13 00000026 72756C202573206573-
    13 0000002F 74652025642E00     
    14 00000036 7200                        read db "r", 0
    15 00000038 00000000                    descriptor dd 0
    16 0000003C 256400                      format_input db "%d", 0
    17 0000003F 00000000                    numar dd 0
    18 00000043 FFFFFFFF                    rezultat dd -1
    19                                  
    20                                  segment code use32 class=code
    21                                  start:
    22                                      ; deschidem fisierul
    23 00000000 68[36000000]                push read
    24 00000005 68[00000000]                push fisier
    25 0000000A FF15[00000000]              call [fopen]
    26 00000010 83C408                      add esp, 4*2
    27                                      
    28 00000013 A3[38000000]                mov [descriptor], eax
    29 00000018 83F800                      cmp eax, 0
    30 0000001B 7461                        je final
    31                                      
    32 0000001D B900000000                  mov ecx, 0
    33                                      numere:
    34                                          ; citim din fisier
    35 00000022 68[3F000000]                    push numar
    36 00000027 68[3C000000]                    push format_input
    37 0000002C FF35[38000000]                  push dword[descriptor]
    38 00000032 FF15[00000000]                  call [fscanf]
    39 00000038 83C40C                          add esp, 4*3
    40                                          
    41 0000003B 83F801                          cmp eax, 1  ; verificam daca mai exista elemente
    42 0000003E 7516                            jne next
    43                                          
    44 00000040 8B1D[3F000000]                  mov ebx, [numar]
    45 00000046 3B1D[43000000]                  cmp ebx, [rezultat]
    46 0000004C 7ED4                            jle numere
    47                                          
    48 0000004E 891D[43000000]                  mov [rezultat], ebx
    49 00000054 EBCC                            jmp numere
    50                                      
    51                                      next:
    52                                      ; afisam rezulatul
    53 00000056 FF35[43000000]              push dword[rezultat]
    54 0000005C 68[00000000]                push fisier
    55 00000061 68[0B000000]                push mesaj_afisare
    56 00000066 FF15[00000000]              call [printf]
    57 0000006C 83C40C                      add esp, 4*3
    58                                      
    59                                      ; inchidem fisierul
    60 0000006F FF35[38000000]              push dword[descriptor]
    61 00000075 FF15[00000000]              call [fclose]
    62 0000007B 83C404                      add esp, 4
    63                                      
    64                                      final:
    65 0000007E 6A00                        push dword 0
    66 00000080 FF15[00000000]              call [exit]
    67                                      
