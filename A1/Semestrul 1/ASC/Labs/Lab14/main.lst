     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, printf, scanf, fopen, fclose, fprintf
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                  
    13                                  
    14                                  segment data use32 class=data
    15 00000000 66696C652E74787400          filename db "file.txt", 0
    16 00000009 7700                        mode db "w", 0
    17 0000000B 00000000                    descriptor dd 0
    18 0000000F 25580A00                    format db "%X", 10, 0
    19 00000013 0101                        numar dw 257
    20 00000015 1000                        n16 dw 16
    21                                      
    22                                      
    23                                  segment code use32 class=code
    24                                      start:
    25 00000000 68[09000000]                    push mode
    26 00000005 68[00000000]                    push filename
    27 0000000A FF15[00000000]                  call [fopen]
    28 00000010 83C408                          add esp, 4*2
    29                                          
    30 00000013 83F800                          cmp eax, 0
    31 00000016 7441                            je final
    32                                          
    33 00000018 A3[0B000000]                    mov [descriptor], eax
    34                                          
    35                                          
    36                                          ; 0-rizam partea sup din eax si edx
    37                                          cifre:
    38 0000001D B800000000                          mov eax, 0
    39 00000022 BA00000000                          mov edx, 0
    40 00000027 66A1[13000000]                      mov ax, [numar]
    41 0000002D 66F735[15000000]                    div word[n16] ; dx = restul la imp cu 16, adica cifra, ax = numarul ramas
    42 00000034 66A3[13000000]                      mov [numar], ax
    43                                              
    44 0000003A 52                                  push edx
    45 0000003B 68[0F000000]                        push format
    46 00000040 FF35[0B000000]                      push dword[descriptor]
    47 00000046 FF15[00000000]                      call [fprintf]
    48 0000004C 83C40C                              add esp, 4*3
    49                                              
    50 0000004F 66833D[13000000]00                  cmp word[numar], 0
    51 00000057 75C4                            jne cifre
    52                                          
    53                                          final:
    54 00000059 6A00                            push    dword 0     
    55 0000005B FF15[00000000]                  call    [exit]      
