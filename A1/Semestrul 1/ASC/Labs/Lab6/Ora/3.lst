     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit
     5                                  import exit msvcrt.dll
     6                                  
     7                                  segment data use32 class=data
     8 00000000 1213151822252730            s db 12h, 13h, 15h, 18h, 22h, 25h, 27h, 30h
     9                                      l equ $-s
    10 00000008 <res 00000008>              s1 resb 8
    11 00000010 <res 00000008>              s2 resb 8
    12                                      
    13                                  ; Se da un sir de numere intregi s.
    14                                  ; Se cere sa se determine sirurile de numere intregi:
    15                                  ; s1 - care contine doar numerele intregi pare din sirul s
    16                                  ; s2 - care contine doar numerele intregi impare din sirul s
    17                                  segment code use32 class=code
    18                                      start:
    19 00000000 B900000000                      mov ecx, 0  ; index-ul din s
    20 00000005 B800000000                      mov eax, 0   ; index-ul lui s1
    21 0000000A BB00000000                      mov ebx, 0   ; index-ul lui s2
    22                                          
    23                                          bucla:
    24 0000000F 8B91[00000000]                      mov edx, [s+ecx]
    25 00000015 F7C201000000                        test edx, 1h
    26 0000001B 7509                                jnz impar
    27 0000001D 8990[08000000]                          mov [s1 + eax], edx
    28 00000023 40                                      inc eax
    29 00000024 EB07                                    jmp final
    30                                              impar:
    31 00000026 8993[10000000]                          mov [s2 + ebx], edx
    32 0000002C 43                                      inc ebx
    33                                              final:
    34 0000002D 41                                      inc ecx
    35 0000002E 83F908                                  cmp ecx, l
    36 00000031 72DC                            jb bucla
    37                                          ; exit(0)
    38 00000033 6A00                            push dword 0        ; push the parameter for exit onto the stack
    39 00000035 FF15[00000000]                  call [exit]         ; call exit to terminate the program
